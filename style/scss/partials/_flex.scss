///////////////////////////
///	DECLARE FLEX MIXINS	///
///////////////////////////

@mixin flex1 {
	display:	flex;	// so strong
	flex:		1;		// relative unit of 1
}

@mixin flex2 {
	display:	flex;	// so strong
	flex:		2;		// relative unit of 1
}

@mixin flex4 {
	display:	flex;	// so strong
	flex:		4;		// relative unit of 1
}

///////////////////
///	CONTAINERS	///
///////////////////

///	container__relative-flex-unit--modifier(color, direction, etc)

.box {								///	block
	background-color:	$brown15;	/// dark brown (15 brightness)
	display:			flex;		/// flexbox parent. all grown up and in charge.
	height:				100%;		/// makes for no scrolling
	padding:			1rem;		/// 14px
}

.box__1--blue50 {
	@include			flex1;		/// container fills all space
	background-color:	$blue50;	/// background blue
	border-radius:		1rem;		/// rounded corners
	box-shadow:			0 .5rem 0 0 $blue10;	/// vertical, no blur, dark blue
	flex-direction:		column;		/// flexbox stacks vertically in a column
	padding:			1rem;		/// sets the size of the frame
}

.box__1--column {
	@include		flex1;	/// container fills all space
	flex-direction:	column;	/// vertical stack of scene then choices
}

.box__4--column {
	@include		flex4;	/// container fills all space
	flex-direction:	column;	/// vertical stack of scene then choices
}


.pad10 {
	padding:			1rem;
}

///////////////
///	SCENES	///
///////////////

@mixin scene {
	@include			flex2;						/// 2/3 of the vertical
	border-radius:		.5rem;						/// smaller corners for inner containers, .5 instead of 1
	box-shadow:			inset 0 0.5rem 0 0 $blue20;	/// dark blue inner (inset) drop shadow
	margin-bottom:		1rem;						/// bottom margin set to keep from touching choices
}

	.scene__index {
		@include			scene;		///	sets the scene flex, border radius, shadow and bottom margin
		background-color:	$blue30;	/// background a bit darker due to being inset
	}

	.scene__adventure {
		@include	scene;	///	sets the scene flex, border radius, shadow and bottom margin
		background-color:	$blue30;	/// background a bit darker due to being inset
	}

.chat {
	@include			flex2;			/// 2/3 of the vertical
	background-color:	$brown75;		/// white was so overpowering
	border-radius:		1rem;			/// rounded corners are fly - static corners
	padding:			3vmin;			/// used to keep h1 text from fighting with the edges - dynamic padding
	margin:				3vmin 0;		/// dynamic margins
}

.chat__cloud {
	@include			flex1;			/// fill the chat box (minus the padding)
	align-items:		center;			/// centers text vertically. *flex
}

///////////////
///	CHOICES	///
///////////////
	

.choices {
	@include			flex1;						/// container fills all space
	background-color:	$blue30;
	border-radius:		.5rem;						/// smaller corners for inner containers, .5 instead of 1
	box-shadow:			inset 0 0.5rem 0 0 $blue20;	/// dark blue inner (inset) drop shadow
	padding:			1rem;						/// sets the size of the frame
	/// _meda-queries.scss orientation changes this to column
}

.choices__button {
	@include			flex1; /// button fills the box
	align-items:		center;	/// centers text on the y axis
	background-color:	$blue40;
	margin:				.3rem;
	box-shadow:			0 0.3rem 0 0 $blue20;	/// lower than choices to reflect less lighting, also not inset
	border-radius:		.5rem;
	justify-content:	center;	/// centers text on the x axis
	color:	$blue70;

}

.choices__button--2 {
	@include			flex2; /// button fills the box
	align-items:		center;	/// centers text on the y axis
	background-color:	$blue40;
	margin:				.3rem;
	box-shadow:			0 0.3rem 0 0 $blue20;	/// lower than choices to reflect less lighting, also not inset
	border-radius:		.5rem;
	justify-content:	center;	/// centers text on the x axis
	color:	$blue70;

}

.bioware-style-conversation-wheel {
	@include	flex1;	/// button fills the box

}

.choices__button:hover,
.choices__button--2:hover {
	background-color:	$blue35;
	box-shadow:			none;	/// removes the front of the button (dropshadow)
}

////////////////////////////////////////////////////////////////////////////////
// DISCARD WHEN DONE                                 						  //
////////////////////////////////////////////////////////////////////////////////
@for $flex-unit from 1 through 10 {
	.flex#{$flex-unit} {
		display: flex; flex: $flex-unit; 
	}
}


////////////////////////////////////////////////////////////////////////////////
// SVG                                                                        //
////////////////////////////////////////////////////////////////////////////////

.svg {
  align-self:      flex-end; 
}

.svg-absolute {
	width: 200px;

}


